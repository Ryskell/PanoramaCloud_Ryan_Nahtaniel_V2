version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - frontend
      - backend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  frontend:
    build: ./social-network-frontend/social-network
    volumes:
      - ./social-network-frontend/social-network:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - frontend
    deploy:
      replicas: 2
      restart_policy:
        condition: any

  backend:
    build: ./social-network-backend
    volumes:
      - ./social-network-backend:/usr/src/app
    ports:
      - "3001:3001"
    depends_on :
      - mysql
    environment:
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=mydatabase
    networks:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: any

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  frontend:
    driver: bridge
  backend: 
    driver: bridge

volumes:
  mysql-data:
    driver: local
